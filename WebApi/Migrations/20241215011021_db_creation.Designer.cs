// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Context;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(JyrosContext))]
    [Migration("20241215011021_db_creation")]
    partial class db_creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UsersStory", b =>
                {
                    b.Property<int>("StoryId")
                        .HasColumnType("int")
                        .HasColumnName("story_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("StoryId", "UserId")
                        .HasName("PK__UsersSto__8DA87F2683494916");

                    b.HasIndex("UserId");

                    b.ToTable("UsersStories", (string)null);
                });

            modelBuilder.Entity("UsersTeam", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.HasKey("UserId", "TeamId")
                        .HasName("PK__UsersTea__663CE9D4131E7ED3");

                    b.HasIndex("TeamId");

                    b.ToTable("UsersTeams", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Sprint", b =>
                {
                    b.Property<int>("SprintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sprint_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SprintId"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("Goal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("goal");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("planned")
                        .HasColumnName("status");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.HasKey("SprintId")
                        .HasName("PK__Sprints__396C1802EFA36E05");

                    b.HasIndex("TeamId");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("WebApi.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("story_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoryId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("description");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int?>("SprintId")
                        .HasColumnType("int")
                        .HasColumnName("sprint_id");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValue("open")
                        .HasColumnName("status");

                    b.Property<int?>("StoryPoints")
                        .HasColumnType("int")
                        .HasColumnName("story_points");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.HasKey("StoryId")
                        .HasName("PK__Stories__66339C56B86254B8");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ParentId");

                    b.HasIndex("SprintId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("WebApi.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("team_description");

                    b.Property<int?>("TeamLeadId")
                        .HasColumnType("int")
                        .HasColumnName("team_lead_id");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("team_name");

                    b.HasKey("TeamId")
                        .HasName("PK__Teams__F82DEDBCAAB0C3AF");

                    b.HasIndex("TeamLeadId");

                    b.HasIndex(new[] { "TeamName" }, "UQ__Teams__29E35E0C9F1894C7")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370FA0824176");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__F3DBC572843AEA6F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UsersStory", b =>
                {
                    b.HasOne("WebApi.Models.Story", null)
                        .WithMany()
                        .HasForeignKey("StoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsersStor__story__73BA3083");

                    b.HasOne("WebApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsersStor__user___74AE54BC");
                });

            modelBuilder.Entity("UsersTeam", b =>
                {
                    b.HasOne("WebApi.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsersTeam__team___6477ECF3");

                    b.HasOne("WebApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UsersTeam__user___6383C8BA");
                });

            modelBuilder.Entity("WebApi.Models.Sprint", b =>
                {
                    b.HasOne("WebApi.Models.Team", "Team")
                        .WithMany("Sprints")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK__Sprints__team_id__693CA210");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WebApi.Models.Story", b =>
                {
                    b.HasOne("WebApi.Models.User", "CreatedByNavigation")
                        .WithMany("Stories")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Stories__created__6FE99F9F");

                    b.HasOne("WebApi.Models.Story", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Stories__parent___70DDC3D8");

                    b.HasOne("WebApi.Models.Sprint", "Sprint")
                        .WithMany("Stories")
                        .HasForeignKey("SprintId")
                        .HasConstraintName("FK__Stories__sprint___6EF57B66");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Parent");

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("WebApi.Models.Team", b =>
                {
                    b.HasOne("WebApi.Models.User", "TeamLead")
                        .WithMany("Teams")
                        .HasForeignKey("TeamLeadId")
                        .HasConstraintName("FK__Teams__team_lead__60A75C0F");

                    b.Navigation("TeamLead");
                });

            modelBuilder.Entity("WebApi.Models.Sprint", b =>
                {
                    b.Navigation("Stories");
                });

            modelBuilder.Entity("WebApi.Models.Story", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("WebApi.Models.Team", b =>
                {
                    b.Navigation("Sprints");
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Navigation("Stories");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
